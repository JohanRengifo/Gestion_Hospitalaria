package vista;

import funciones.RegistroAnalisis;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import modelo.Analisis;
import funciones.RegistroAnalisis;
import java.util.Date;
import javax.swing.DefaultListModel;

public class RegistroAnalisisVentana extends javax.swing.JFrame {
    
    private DefaultListModel<String> idPacienteListModel;
    /**
     * Creates new form RegistroAnalisisVentana
     */
    public RegistroAnalisisVentana() {
        initComponents();
        
        idPacienteListModel = new DefaultListModel<>();
        
        // Obtener los IDs de pacientes y agregarlos al modelo de lista
        obtenerIDsDePacientes();
    }
    
    // #######################
    private void obtenerIDsDePacientes() {
        idPacienteListModel.clear(); // Limpiar el modelo de lista antes de agregar nuevos elementos
        
        // Llamar a la funci√≥n en RegistroAnalisis.java para obtener los IDs de pacientes
        java.util.List<Integer> idPacientes = funciones.RegistroAnalisis.PacienteDAO.obtenerIDsPacientes();
        
        // Agregar cada ID de paciente al modelo de lista
        for (Integer id : idPacientes) {
            idPacienteListModel.addElement(String.valueOf(id));
        }
    }
    // ###########

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Title = new javax.swing.JLabel();
        RegistrarBtn = new javax.swing.JButton();
        idPacienteTextField = new javax.swing.JTextField();
        tipoAnalisisTextField = new javax.swing.JTextField();
        fechaRealizacionDatePicker = new javax.swing.JTextField();
        medicoSolicitanteTextField = new javax.swing.JTextField();
        enfermeroRealizadorTextField = new javax.swing.JTextField();
        resultadoTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        idpacienteList = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Title.setText("Registro Analisis");

        RegistrarBtn.setText("Registrar");
        RegistrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarBtnActionPerformed(evt);
            }
        });

        idPacienteTextField.setPreferredSize(new java.awt.Dimension(150, 22));

        tipoAnalisisTextField.setPreferredSize(new java.awt.Dimension(150, 22));

        fechaRealizacionDatePicker.setText("yyyy/mm/dd");
        fechaRealizacionDatePicker.setPreferredSize(new java.awt.Dimension(150, 22));

        enfermeroRealizadorTextField.setPreferredSize(new java.awt.Dimension(150, 22));

        resultadoTextField.setPreferredSize(new java.awt.Dimension(150, 22));

        jLabel1.setText("idPaciente");

        jLabel2.setText("tipoAnalisis");

        jLabel3.setText("fecharealizacion");

        jLabel4.setText("medicosolicitante");

        jLabel5.setText("enfermero realizador");

        jLabel6.setText("Resultado");

        idpacienteList.setModel(new javax.swing.AbstractListModel<String> obtenerIDsPacientes() {
            String[] strings = {};
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(idpacienteList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Title)
                            .addComponent(RegistrarBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tipoAnalisisTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(idPacienteTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fechaRealizacionDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(enfermeroRealizadorTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(resultadoTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(medicoSolicitanteTextField))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(213, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(Title)
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idPacienteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tipoAnalisisTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fechaRealizacionDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(medicoSolicitanteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enfermeroRealizadorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(resultadoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(RegistrarBtn)
                .addGap(89, 89, 89))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RegistrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarBtnActionPerformed
    // Obtener los datos del formulario
        int idPaciente = Integer.parseInt(idPacienteTextField.getText());
        String tipoAnalisis = tipoAnalisisTextField.getText();

        // Obtener el texto del JTextField fechaRealizacionDatePicker
        String fechaRealizacionText = fechaRealizacionDatePicker.getText();

        // Convertir el texto a un objeto Date
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); // Formato de fecha esperado
        Date fechaRealDate = null;
        try {
            fechaRealDate = dateFormat.parse(fechaRealizacionText);
        } catch (ParseException e) {
            e.printStackTrace();
        }

        // Verificar si la fecha se pudo parsear correctamente
        if (fechaRealDate != null) {
            // Convertir la fecha a un formato adecuado para la base de datos
            java.sql.Date fechaRealiDate = new java.sql.Date(fechaRealDate.getTime());

            int medicoSolicitante = Integer.parseInt(medicoSolicitanteTextField.getText());
            int enfermeroRealizador = Integer.parseInt(enfermeroRealizadorTextField.getText());
            String resultado = resultadoTextField.getText();

            // Crear un nuevo objeto de an√°lisis con los datos del formulario
            Analisis nuevoAnalisis = new Analisis(idPaciente, tipoAnalisis, fechaRealiDate, medicoSolicitante, enfermeroRealizador, resultado);

            // Intentar registrar el an√°lisis en la base de datos
            boolean exito = RegistroAnalisis.registrarAnalisis(nuevoAnalisis);

            // Mostrar mensaje de √©xito o error seg√∫n el resultado de la operaci√≥n
            if (exito) {
                JOptionPane.showMessageDialog(this, "El an√°lisis se ha registrado correctamente.", "Registro Exitoso", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "No se pudo registrar el an√°lisis. Por favor, int√©ntelo de nuevo.", "Error de Registro", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Mostrar un mensaje de error si la fecha no se pudo parsear correctamente
            JOptionPane.showMessageDialog(this, "La fecha ingresada no es v√°lida. Por favor, ingrese una fecha en el formato yyyy-MM-dd.", "Error de Formato de Fecha", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_RegistrarBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroAnalisisVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroAnalisisVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroAnalisisVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroAnalisisVentana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroAnalisisVentana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton RegistrarBtn;
    private javax.swing.JLabel Title;
    private javax.swing.JTextField enfermeroRealizadorTextField;
    private javax.swing.JTextField fechaRealizacionDatePicker;
    private javax.swing.JTextField idPacienteTextField;
    private javax.swing.JList<String> idpacienteList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField medicoSolicitanteTextField;
    private javax.swing.JTextField resultadoTextField;
    private javax.swing.JTextField tipoAnalisisTextField;
    // End of variables declaration//GEN-END:variables
}
